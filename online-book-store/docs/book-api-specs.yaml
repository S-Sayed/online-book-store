openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://localhost:8888
  description: Generated server url
paths:
  /v1/book/{isbn}:
    get:
      tags:
      - book-controller
      operationId: getBookByIsbn
      parameters:
      - name: isbn
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
    put:
      tags:
      - book-controller
      operationId: updateBook
      parameters:
      - name: isbn
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
    delete:
      tags:
      - book-controller
      operationId: deleteBook
      parameters:
      - name: isbn
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
  /v1/checkout/order:
    post:
      tags:
      - checkout-controller
      operationId: calculateTotalPrice
      parameters:
      - name: promotionCode
        in: query
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Book'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckoutResponse'
  /v1/book:
    get:
      tags:
      - book-controller
      operationId: getAllBook
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'
    post:
      tags:
      - book-controller
      operationId: addBook
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
components:
  schemas:
    Author:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        email:
          type: string
    Book:
      required:
      - isbn
      - name
      - price
      type: object
      properties:
        isbn:
          type: string
        name:
          type: string
        description:
          type: string
        price:
          type: number
        authors:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Author'
        classification:
          $ref: '#/components/schemas/Classification'
    Classification:
      type: object
      properties:
        code:
          type: string
        name:
          type: string
    CheckoutResponse:
      type: object
      properties:
        totalPrice:
          type: number
